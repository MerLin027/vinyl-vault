{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VRUSHANK\\\\Desktop\\\\Ecom Website\\\\client\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create Auth Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// Auth Provider Component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is already authenticated on mount\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  // Login method\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      if (response.data.success) {\n        setCurrentUser(response.data.user);\n        return {\n          success: true\n        };\n      } else {\n        setError(response.data.error || 'Login failed');\n        return {\n          success: false,\n          message: response.data.error\n        };\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Login failed';\n      setError(errorMessage);\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n\n  // Signup method\n  const signup = async (email, username, password) => {\n    try {\n      setError(null);\n      await axios.post('/api/auth/signup', {\n        email,\n        username,\n        password\n      });\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      const errorMessage = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Signup failed';\n      setError(errorMessage);\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n\n  // Logout method\n  const logout = async () => {\n    try {\n      await axios.post('/api/auth/logout');\n      setCurrentUser(null);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      const errorMessage = ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Logout failed';\n      setError(errorMessage);\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n\n  // Check authentication status\n  const checkAuth = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/auth/status');\n      if (response.data.authenticated) {\n        setCurrentUser(response.data.user);\n      } else {\n        setCurrentUser(null);\n      }\n    } catch (err) {\n      setError('Authentication check failed');\n      setCurrentUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Context value\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    signup,\n    logout,\n    checkAuth\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for using auth context\n_s(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","error","setError","checkAuth","login","email","password","response","post","data","success","user","message","err","_err$response","_err$response$data","errorMessage","signup","username","_err$response2","_err$response2$data","logout","_err$response3","_err$response3$data","get","authenticated","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/VRUSHANK/Desktop/Ecom Website/client/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Create Auth Context\r\nconst AuthContext = createContext(null);\r\n\r\n// Auth Provider Component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check if user is already authenticated on mount\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Login method\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError(null);\r\n      const response = await axios.post('/api/auth/login', { email, password });\r\n      \r\n      if (response.data.success) {\r\n        setCurrentUser(response.data.user);\r\n        return { success: true };\r\n      } else {\r\n        setError(response.data.error || 'Login failed');\r\n        return { success: false, message: response.data.error };\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.error || 'Login failed';\r\n      setError(errorMessage);\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Signup method\r\n  const signup = async (email, username, password) => {\r\n    try {\r\n      setError(null);\r\n      await axios.post('/api/auth/signup', { email, username, password });\r\n      return { success: true };\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.error || 'Signup failed';\r\n      setError(errorMessage);\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Logout method\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post('/api/auth/logout');\r\n      setCurrentUser(null);\r\n      return { success: true };\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.error || 'Logout failed';\r\n      setError(errorMessage);\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Check authentication status\r\n  const checkAuth = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get('/api/auth/status');\r\n      \r\n      if (response.data.authenticated) {\r\n        setCurrentUser(response.data.user);\r\n      } else {\r\n        setCurrentUser(null);\r\n      }\r\n    } catch (err) {\r\n      setError('Authentication check failed');\r\n      setCurrentUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    currentUser,\r\n    loading,\r\n    error,\r\n    login,\r\n    signup,\r\n    logout,\r\n    checkAuth\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for using auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}