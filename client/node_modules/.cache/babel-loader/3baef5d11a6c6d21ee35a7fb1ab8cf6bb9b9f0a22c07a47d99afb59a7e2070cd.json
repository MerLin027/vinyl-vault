{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect,useCallback}from'react';import{transformProducts}from'../utils/productTransformer';// Create context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const ProductContext=/*#__PURE__*/createContext();// API URL (would typically come from env variables)\nconst API_BASE_URL='https://api.escuelajs.co/api/v1/products';const PRODUCTS_PER_PAGE=12;// Simple API service functions\nconst fetchProductsFromAPI=async function(){let offset=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:PRODUCTS_PER_PAGE;try{const response=await fetch(`${API_BASE_URL}?offset=${offset}&limit=${limit}`);if(!response.ok){throw new Error(`API Error: ${response.status}`);}return await response.json();}catch(error){console.error('Error fetching products:',error);throw error;}};const searchProductsFromAPI=async query=>{try{const response=await fetch(`${API_BASE_URL}?title=${encodeURIComponent(query)}`);if(!response.ok){throw new Error(`API Error: ${response.status}`);}return await response.json();}catch(error){console.error('Error searching products:',error);throw error;}};// Provider component\nexport const ProductProvider=_ref=>{let{children}=_ref;// State\nconst[products,setProducts]=useState([]);const[filteredProducts,setFilteredProducts]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[pagination,setPagination]=useState({currentPage:0,hasMore:true,totalProducts:0});// Filters state\nconst[filters,setFilters]=useState({genre:[],decade:[],condition:[],productType:[],priceRange:[0,500]});// Initialize with products on mount\nuseEffect(()=>{fetchProducts();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// Fetch products with pagination\nconst fetchProducts=useCallback(async function(){let resetResults=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;try{setLoading(true);setError(null);const offset=resetResults?0:pagination.currentPage*PRODUCTS_PER_PAGE;const rawProducts=await fetchProductsFromAPI(offset,PRODUCTS_PER_PAGE);// Transform products to vinyl-themed products\nconst transformedProducts=transformProducts(rawProducts);// Update state based on whether we're resetting or appending\nif(resetResults){setProducts(transformedProducts);setFilteredProducts(transformedProducts);setPagination({currentPage:0,hasMore:transformedProducts.length===PRODUCTS_PER_PAGE,totalProducts:transformedProducts.length});}else{setProducts(prevProducts=>[...prevProducts,...transformedProducts]);setFilteredProducts(prevProducts=>[...prevProducts,...transformedProducts]);setPagination(prev=>({currentPage:prev.currentPage+1,hasMore:transformedProducts.length===PRODUCTS_PER_PAGE,totalProducts:prev.totalProducts+transformedProducts.length}));}}catch(err){setError(err.message);}finally{setLoading(false);}},[pagination]);// Load more products (infinite scroll functionality)\nconst loadMore=useCallback(async()=>{if(!loading&&pagination.hasMore){await fetchProducts(false);}},[loading,pagination.hasMore,fetchProducts]);// Search products\nconst searchProducts=useCallback(async query=>{if(!query.trim()){fetchProducts();return;}try{setLoading(true);setError(null);const rawProducts=await searchProductsFromAPI(query);// Transform products\nconst transformedProducts=transformProducts(rawProducts);setProducts(transformedProducts);setFilteredProducts(transformedProducts);setPagination({currentPage:0,hasMore:false,// Search results don't support pagination in this API\ntotalProducts:transformedProducts.length});}catch(err){setError(err.message);}finally{setLoading(false);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// Apply filters to products\nconst filterProducts=useCallback(()=>{let result=[...products];// Filter by genre\nif(filters.genre.length>0){result=result.filter(product=>filters.genre.includes(product.genre));}// Filter by decade\nif(filters.decade.length>0){result=result.filter(product=>filters.decade.includes(product.decade));}// Filter by condition\nif(filters.condition.length>0){result=result.filter(product=>filters.condition.includes(product.condition));}// Filter by product type\nif(filters.productType.length>0){result=result.filter(product=>filters.productType.includes(product.productType));}// Filter by price range\nresult=result.filter(product=>{const price=parseFloat(product.price);return price>=filters.priceRange[0]&&price<=filters.priceRange[1];});setFilteredProducts(result);},[products,filters]);// Update filters\nconst updateFilters=useCallback(newFilters=>{setFilters(prev=>({...prev,...newFilters}));},[]);// Effect to apply filters when filters change\nuseEffect(()=>{filterProducts();},[filters,filterProducts]);// Get product by ID\nconst getProductById=useCallback(async id=>{try{setLoading(true);// First check if the product is already in our state\nconst existingProduct=products.find(p=>p.id===parseInt(id));if(existingProduct){return existingProduct;}// If not, fetch it from the API\nconst response=await fetch(`${API_BASE_URL}/${id}`);if(!response.ok){throw new Error(`API Error: ${response.status}`);}const rawProduct=await response.json();// Transform the product\nconst transformedProduct=transformProducts([rawProduct])[0];return transformedProduct;}catch(err){setError(err.message);return null;}finally{setLoading(false);}},[products]);// Context value\nconst value={products:filteredProducts,allProducts:products,loading,error,pagination,fetchProducts,loadMore,searchProducts,updateFilters,filters,getProductById};return/*#__PURE__*/_jsx(ProductContext.Provider,{value:value,children:children});};// Custom hook for using this context\nexport const useProducts=()=>{const context=useContext(ProductContext);if(!context){throw new Error('useProducts must be used within a ProductProvider');}return context;};export default ProductContext;","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useCallback","transformProducts","jsx","_jsx","ProductContext","API_BASE_URL","PRODUCTS_PER_PAGE","fetchProductsFromAPI","offset","arguments","length","undefined","limit","response","fetch","ok","Error","status","json","error","console","searchProductsFromAPI","query","encodeURIComponent","ProductProvider","_ref","children","products","setProducts","filteredProducts","setFilteredProducts","loading","setLoading","setError","pagination","setPagination","currentPage","hasMore","totalProducts","filters","setFilters","genre","decade","condition","productType","priceRange","fetchProducts","resetResults","rawProducts","transformedProducts","prevProducts","prev","err","message","loadMore","searchProducts","trim","filterProducts","result","filter","product","includes","price","parseFloat","updateFilters","newFilters","getProductById","id","existingProduct","find","p","parseInt","rawProduct","transformedProduct","value","allProducts","Provider","useProducts","context"],"sources":["C:/Users/VRUSHANK/Desktop/Ecom Website/client/src/contexts/ProductContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\r\nimport { transformProducts } from '../utils/productTransformer';\r\n\r\n// Create context\r\nconst ProductContext = createContext();\r\n\r\n// API URL (would typically come from env variables)\r\nconst API_BASE_URL = 'https://api.escuelajs.co/api/v1/products';\r\nconst PRODUCTS_PER_PAGE = 12;\r\n\r\n// Simple API service functions\r\nconst fetchProductsFromAPI = async (offset = 0, limit = PRODUCTS_PER_PAGE) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}?offset=${offset}&limit=${limit}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`API Error: ${response.status}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching products:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst searchProductsFromAPI = async (query) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}?title=${encodeURIComponent(query)}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`API Error: ${response.status}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error searching products:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Provider component\r\nexport const ProductProvider = ({ children }) => {\r\n  // State\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [pagination, setPagination] = useState({\r\n    currentPage: 0,\r\n    hasMore: true,\r\n    totalProducts: 0\r\n  });\r\n  \r\n  // Filters state\r\n  const [filters, setFilters] = useState({\r\n    genre: [],\r\n    decade: [],\r\n    condition: [],\r\n    productType: [],\r\n    priceRange: [0, 500]\r\n  });\r\n  \r\n  // Initialize with products on mount\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  \r\n  // Fetch products with pagination\r\n  const fetchProducts = useCallback(async (resetResults = true) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const offset = resetResults ? 0 : pagination.currentPage * PRODUCTS_PER_PAGE;\r\n      const rawProducts = await fetchProductsFromAPI(offset, PRODUCTS_PER_PAGE);\r\n      \r\n      // Transform products to vinyl-themed products\r\n      const transformedProducts = transformProducts(rawProducts);\r\n      \r\n      // Update state based on whether we're resetting or appending\r\n      if (resetResults) {\r\n        setProducts(transformedProducts);\r\n        setFilteredProducts(transformedProducts);\r\n        setPagination({\r\n          currentPage: 0,\r\n          hasMore: transformedProducts.length === PRODUCTS_PER_PAGE,\r\n          totalProducts: transformedProducts.length\r\n        });\r\n      } else {\r\n        setProducts(prevProducts => [...prevProducts, ...transformedProducts]);\r\n        setFilteredProducts(prevProducts => [...prevProducts, ...transformedProducts]);\r\n        setPagination(prev => ({\r\n          currentPage: prev.currentPage + 1,\r\n          hasMore: transformedProducts.length === PRODUCTS_PER_PAGE,\r\n          totalProducts: prev.totalProducts + transformedProducts.length\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [pagination]);\r\n  \r\n  // Load more products (infinite scroll functionality)\r\n  const loadMore = useCallback(async () => {\r\n    if (!loading && pagination.hasMore) {\r\n      await fetchProducts(false);\r\n    }\r\n  }, [loading, pagination.hasMore, fetchProducts]);\r\n  \r\n  // Search products\r\n  const searchProducts = useCallback(async (query) => {\r\n    if (!query.trim()) {\r\n      fetchProducts();\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const rawProducts = await searchProductsFromAPI(query);\r\n      \r\n      // Transform products\r\n      const transformedProducts = transformProducts(rawProducts);\r\n      \r\n      setProducts(transformedProducts);\r\n      setFilteredProducts(transformedProducts);\r\n      setPagination({\r\n        currentPage: 0,\r\n        hasMore: false, // Search results don't support pagination in this API\r\n        totalProducts: transformedProducts.length\r\n      });\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  \r\n  // Apply filters to products\r\n  const filterProducts = useCallback(() => {\r\n    let result = [...products];\r\n    \r\n    // Filter by genre\r\n    if (filters.genre.length > 0) {\r\n      result = result.filter(product => \r\n        filters.genre.includes(product.genre)\r\n      );\r\n    }\r\n    \r\n    // Filter by decade\r\n    if (filters.decade.length > 0) {\r\n      result = result.filter(product => \r\n        filters.decade.includes(product.decade)\r\n      );\r\n    }\r\n    \r\n    // Filter by condition\r\n    if (filters.condition.length > 0) {\r\n      result = result.filter(product => \r\n        filters.condition.includes(product.condition)\r\n      );\r\n    }\r\n    \r\n    // Filter by product type\r\n    if (filters.productType.length > 0) {\r\n      result = result.filter(product => \r\n        filters.productType.includes(product.productType)\r\n      );\r\n    }\r\n    \r\n    // Filter by price range\r\n    result = result.filter(product => {\r\n      const price = parseFloat(product.price);\r\n      return price >= filters.priceRange[0] && price <= filters.priceRange[1];\r\n    });\r\n    \r\n    setFilteredProducts(result);\r\n  }, [products, filters]);\r\n  \r\n  // Update filters\r\n  const updateFilters = useCallback((newFilters) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      ...newFilters\r\n    }));\r\n  }, []);\r\n  \r\n  // Effect to apply filters when filters change\r\n  useEffect(() => {\r\n    filterProducts();\r\n  }, [filters, filterProducts]);\r\n  \r\n  // Get product by ID\r\n  const getProductById = useCallback(async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // First check if the product is already in our state\r\n      const existingProduct = products.find(p => p.id === parseInt(id));\r\n      \r\n      if (existingProduct) {\r\n        return existingProduct;\r\n      }\r\n      \r\n      // If not, fetch it from the API\r\n      const response = await fetch(`${API_BASE_URL}/${id}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`API Error: ${response.status}`);\r\n      }\r\n      \r\n      const rawProduct = await response.json();\r\n      \r\n      // Transform the product\r\n      const transformedProduct = transformProducts([rawProduct])[0];\r\n      \r\n      return transformedProduct;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [products]);\r\n  \r\n  // Context value\r\n  const value = {\r\n    products: filteredProducts,\r\n    allProducts: products,\r\n    loading,\r\n    error,\r\n    pagination,\r\n    fetchProducts,\r\n    loadMore,\r\n    searchProducts,\r\n    updateFilters,\r\n    filters,\r\n    getProductById\r\n  };\r\n  \r\n  return (\r\n    <ProductContext.Provider value={value}>\r\n      {children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for using this context\r\nexport const useProducts = () => {\r\n  const context = useContext(ProductContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useProducts must be used within a ProductProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default ProductContext; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAC1F,OAASC,iBAAiB,KAAQ,6BAA6B,CAE/D;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,cAAc,cAAGR,aAAa,CAAC,CAAC,CAEtC;AACA,KAAM,CAAAS,YAAY,CAAG,0CAA0C,CAC/D,KAAM,CAAAC,iBAAiB,CAAG,EAAE,CAE5B;AACA,KAAM,CAAAC,oBAAoB,CAAG,cAAAA,CAAA,CAAiD,IAA1C,CAAAC,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,IAAE,CAAAG,KAAK,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGH,iBAAiB,CACvE,GAAI,CACF,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGT,YAAY,WAAWG,MAAM,UAAUI,KAAK,EAAE,CAAC,CAE/E,GAAI,CAACC,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,cAAcH,QAAQ,CAACI,MAAM,EAAE,CAAC,CAClD,CAEA,MAAO,MAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAE,qBAAqB,CAAG,KAAO,CAAAC,KAAK,EAAK,CAC7C,GAAI,CACF,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGT,YAAY,UAAUkB,kBAAkB,CAACD,KAAK,CAAC,EAAE,CAAC,CAElF,GAAI,CAACT,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,cAAcH,QAAQ,CAACI,MAAM,EAAE,CAAC,CAClD,CAEA,MAAO,MAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAK,eAAe,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC1C;AACA,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAG/B,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACgC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGjC,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAACkC,OAAO,CAAEC,UAAU,CAAC,CAAGnC,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACsB,KAAK,CAAEc,QAAQ,CAAC,CAAGpC,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACqC,UAAU,CAAEC,aAAa,CAAC,CAAGtC,QAAQ,CAAC,CAC3CuC,WAAW,CAAE,CAAC,CACdC,OAAO,CAAE,IAAI,CACbC,aAAa,CAAE,CACjB,CAAC,CAAC,CAEF;AACA,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAG3C,QAAQ,CAAC,CACrC4C,KAAK,CAAE,EAAE,CACTC,MAAM,CAAE,EAAE,CACVC,SAAS,CAAE,EAAE,CACbC,WAAW,CAAE,EAAE,CACfC,UAAU,CAAE,CAAC,CAAC,CAAE,GAAG,CACrB,CAAC,CAAC,CAEF;AACA9C,SAAS,CAAC,IAAM,CACd+C,aAAa,CAAC,CAAC,CACjB;AACA,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAA,aAAa,CAAG9C,WAAW,CAAC,gBAA+B,IAAxB,CAAA+C,YAAY,CAAAtC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CAC1D,GAAI,CACFuB,UAAU,CAAC,IAAI,CAAC,CAChBC,QAAQ,CAAC,IAAI,CAAC,CAEd,KAAM,CAAAzB,MAAM,CAAGuC,YAAY,CAAG,CAAC,CAAGb,UAAU,CAACE,WAAW,CAAG9B,iBAAiB,CAC5E,KAAM,CAAA0C,WAAW,CAAG,KAAM,CAAAzC,oBAAoB,CAACC,MAAM,CAAEF,iBAAiB,CAAC,CAEzE;AACA,KAAM,CAAA2C,mBAAmB,CAAGhD,iBAAiB,CAAC+C,WAAW,CAAC,CAE1D;AACA,GAAID,YAAY,CAAE,CAChBnB,WAAW,CAACqB,mBAAmB,CAAC,CAChCnB,mBAAmB,CAACmB,mBAAmB,CAAC,CACxCd,aAAa,CAAC,CACZC,WAAW,CAAE,CAAC,CACdC,OAAO,CAAEY,mBAAmB,CAACvC,MAAM,GAAKJ,iBAAiB,CACzDgC,aAAa,CAAEW,mBAAmB,CAACvC,MACrC,CAAC,CAAC,CACJ,CAAC,IAAM,CACLkB,WAAW,CAACsB,YAAY,EAAI,CAAC,GAAGA,YAAY,CAAE,GAAGD,mBAAmB,CAAC,CAAC,CACtEnB,mBAAmB,CAACoB,YAAY,EAAI,CAAC,GAAGA,YAAY,CAAE,GAAGD,mBAAmB,CAAC,CAAC,CAC9Ed,aAAa,CAACgB,IAAI,GAAK,CACrBf,WAAW,CAAEe,IAAI,CAACf,WAAW,CAAG,CAAC,CACjCC,OAAO,CAAEY,mBAAmB,CAACvC,MAAM,GAAKJ,iBAAiB,CACzDgC,aAAa,CAAEa,IAAI,CAACb,aAAa,CAAGW,mBAAmB,CAACvC,MAC1D,CAAC,CAAC,CAAC,CACL,CACF,CAAE,MAAO0C,GAAG,CAAE,CACZnB,QAAQ,CAACmB,GAAG,CAACC,OAAO,CAAC,CACvB,CAAC,OAAS,CACRrB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,CAACE,UAAU,CAAC,CAAC,CAEhB;AACA,KAAM,CAAAoB,QAAQ,CAAGtD,WAAW,CAAC,SAAY,CACvC,GAAI,CAAC+B,OAAO,EAAIG,UAAU,CAACG,OAAO,CAAE,CAClC,KAAM,CAAAS,aAAa,CAAC,KAAK,CAAC,CAC5B,CACF,CAAC,CAAE,CAACf,OAAO,CAAEG,UAAU,CAACG,OAAO,CAAES,aAAa,CAAC,CAAC,CAEhD;AACA,KAAM,CAAAS,cAAc,CAAGvD,WAAW,CAAC,KAAO,CAAAsB,KAAK,EAAK,CAClD,GAAI,CAACA,KAAK,CAACkC,IAAI,CAAC,CAAC,CAAE,CACjBV,aAAa,CAAC,CAAC,CACf,OACF,CAEA,GAAI,CACFd,UAAU,CAAC,IAAI,CAAC,CAChBC,QAAQ,CAAC,IAAI,CAAC,CAEd,KAAM,CAAAe,WAAW,CAAG,KAAM,CAAA3B,qBAAqB,CAACC,KAAK,CAAC,CAEtD;AACA,KAAM,CAAA2B,mBAAmB,CAAGhD,iBAAiB,CAAC+C,WAAW,CAAC,CAE1DpB,WAAW,CAACqB,mBAAmB,CAAC,CAChCnB,mBAAmB,CAACmB,mBAAmB,CAAC,CACxCd,aAAa,CAAC,CACZC,WAAW,CAAE,CAAC,CACdC,OAAO,CAAE,KAAK,CAAE;AAChBC,aAAa,CAAEW,mBAAmB,CAACvC,MACrC,CAAC,CAAC,CACJ,CAAE,MAAO0C,GAAG,CAAE,CACZnB,QAAQ,CAACmB,GAAG,CAACC,OAAO,CAAC,CACvB,CAAC,OAAS,CACRrB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF;AACA,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAyB,cAAc,CAAGzD,WAAW,CAAC,IAAM,CACvC,GAAI,CAAA0D,MAAM,CAAG,CAAC,GAAG/B,QAAQ,CAAC,CAE1B;AACA,GAAIY,OAAO,CAACE,KAAK,CAAC/B,MAAM,CAAG,CAAC,CAAE,CAC5BgD,MAAM,CAAGA,MAAM,CAACC,MAAM,CAACC,OAAO,EAC5BrB,OAAO,CAACE,KAAK,CAACoB,QAAQ,CAACD,OAAO,CAACnB,KAAK,CACtC,CAAC,CACH,CAEA;AACA,GAAIF,OAAO,CAACG,MAAM,CAAChC,MAAM,CAAG,CAAC,CAAE,CAC7BgD,MAAM,CAAGA,MAAM,CAACC,MAAM,CAACC,OAAO,EAC5BrB,OAAO,CAACG,MAAM,CAACmB,QAAQ,CAACD,OAAO,CAAClB,MAAM,CACxC,CAAC,CACH,CAEA;AACA,GAAIH,OAAO,CAACI,SAAS,CAACjC,MAAM,CAAG,CAAC,CAAE,CAChCgD,MAAM,CAAGA,MAAM,CAACC,MAAM,CAACC,OAAO,EAC5BrB,OAAO,CAACI,SAAS,CAACkB,QAAQ,CAACD,OAAO,CAACjB,SAAS,CAC9C,CAAC,CACH,CAEA;AACA,GAAIJ,OAAO,CAACK,WAAW,CAAClC,MAAM,CAAG,CAAC,CAAE,CAClCgD,MAAM,CAAGA,MAAM,CAACC,MAAM,CAACC,OAAO,EAC5BrB,OAAO,CAACK,WAAW,CAACiB,QAAQ,CAACD,OAAO,CAAChB,WAAW,CAClD,CAAC,CACH,CAEA;AACAc,MAAM,CAAGA,MAAM,CAACC,MAAM,CAACC,OAAO,EAAI,CAChC,KAAM,CAAAE,KAAK,CAAGC,UAAU,CAACH,OAAO,CAACE,KAAK,CAAC,CACvC,MAAO,CAAAA,KAAK,EAAIvB,OAAO,CAACM,UAAU,CAAC,CAAC,CAAC,EAAIiB,KAAK,EAAIvB,OAAO,CAACM,UAAU,CAAC,CAAC,CAAC,CACzE,CAAC,CAAC,CAEFf,mBAAmB,CAAC4B,MAAM,CAAC,CAC7B,CAAC,CAAE,CAAC/B,QAAQ,CAAEY,OAAO,CAAC,CAAC,CAEvB;AACA,KAAM,CAAAyB,aAAa,CAAGhE,WAAW,CAAEiE,UAAU,EAAK,CAChDzB,UAAU,CAACW,IAAI,GAAK,CAClB,GAAGA,IAAI,CACP,GAAGc,UACL,CAAC,CAAC,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAEN;AACAlE,SAAS,CAAC,IAAM,CACd0D,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,CAAClB,OAAO,CAAEkB,cAAc,CAAC,CAAC,CAE7B;AACA,KAAM,CAAAS,cAAc,CAAGlE,WAAW,CAAC,KAAO,CAAAmE,EAAE,EAAK,CAC/C,GAAI,CACFnC,UAAU,CAAC,IAAI,CAAC,CAEhB;AACA,KAAM,CAAAoC,eAAe,CAAGzC,QAAQ,CAAC0C,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACH,EAAE,GAAKI,QAAQ,CAACJ,EAAE,CAAC,CAAC,CAEjE,GAAIC,eAAe,CAAE,CACnB,MAAO,CAAAA,eAAe,CACxB,CAEA;AACA,KAAM,CAAAvD,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGT,YAAY,IAAI8D,EAAE,EAAE,CAAC,CAErD,GAAI,CAACtD,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,cAAcH,QAAQ,CAACI,MAAM,EAAE,CAAC,CAClD,CAEA,KAAM,CAAAuD,UAAU,CAAG,KAAM,CAAA3D,QAAQ,CAACK,IAAI,CAAC,CAAC,CAExC;AACA,KAAM,CAAAuD,kBAAkB,CAAGxE,iBAAiB,CAAC,CAACuE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAE7D,MAAO,CAAAC,kBAAkB,CAC3B,CAAE,MAAOrB,GAAG,CAAE,CACZnB,QAAQ,CAACmB,GAAG,CAACC,OAAO,CAAC,CACrB,MAAO,KAAI,CACb,CAAC,OAAS,CACRrB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,CAACL,QAAQ,CAAC,CAAC,CAEd;AACA,KAAM,CAAA+C,KAAK,CAAG,CACZ/C,QAAQ,CAAEE,gBAAgB,CAC1B8C,WAAW,CAAEhD,QAAQ,CACrBI,OAAO,CACPZ,KAAK,CACLe,UAAU,CACVY,aAAa,CACbQ,QAAQ,CACRC,cAAc,CACdS,aAAa,CACbzB,OAAO,CACP2B,cACF,CAAC,CAED,mBACE/D,IAAA,CAACC,cAAc,CAACwE,QAAQ,EAACF,KAAK,CAAEA,KAAM,CAAAhD,QAAA,CACnCA,QAAQ,CACc,CAAC,CAE9B,CAAC,CAED;AACA,MAAO,MAAM,CAAAmD,WAAW,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,OAAO,CAAGhF,UAAU,CAACM,cAAc,CAAC,CAE1C,GAAI,CAAC0E,OAAO,CAAE,CACZ,KAAM,IAAI,CAAA9D,KAAK,CAAC,mDAAmD,CAAC,CACtE,CAEA,MAAO,CAAA8D,OAAO,CAChB,CAAC,CAED,cAAe,CAAA1E,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}