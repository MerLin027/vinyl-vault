{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VRUSHANK\\\\Desktop\\\\Ecom Website\\\\client\\\\src\\\\contexts\\\\CartContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { addToCart as addToCartUtil, removeFromCart as removeFromCartUtil, updateCartItemQuantity as updateCartItemQuantityUtil, clearCart as clearCartUtil, updateCartCount } from '../utils/cartUtils';\n\n// Create cart context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(null);\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n\n  // Initialize cart from localStorage\n  useEffect(() => {\n    const loadCart = () => {\n      const storedCart = JSON.parse(localStorage.getItem('cart')) || [];\n      setCartItems(storedCart);\n\n      // Update cart count\n      const totalItems = storedCart.reduce((sum, item) => sum + (item.quantity || 1), 0);\n      setCartCount(totalItems);\n    };\n    loadCart();\n\n    // Listen for storage events (from other tabs/windows)\n    window.addEventListener('storage', loadCart);\n\n    // Listen for cart updates from within the app\n    window.addEventListener('cartUpdated', loadCart);\n    return () => {\n      window.removeEventListener('storage', loadCart);\n      window.removeEventListener('cartUpdated', loadCart);\n    };\n  }, []);\n\n  // Add item to cart\n  const addItem = product => {\n    const updatedCart = addToCartUtil(product);\n    setCartItems(updatedCart);\n    setCartCount(updatedCart.reduce((sum, item) => sum + (item.quantity || 1), 0));\n    return updatedCart;\n  };\n\n  // Remove item from cart\n  const removeItem = productId => {\n    const updatedCart = removeFromCartUtil(productId);\n    setCartItems(updatedCart);\n    setCartCount(updatedCart.reduce((sum, item) => sum + (item.quantity || 1), 0));\n    return updatedCart;\n  };\n\n  // Update item quantity\n  const updateItemQuantity = (productId, quantity) => {\n    const updatedCart = updateCartItemQuantityUtil(productId, quantity);\n    setCartItems(updatedCart);\n    setCartCount(updatedCart.reduce((sum, item) => sum + (item.quantity || 1), 0));\n    return updatedCart;\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    const emptyCart = clearCartUtil();\n    setCartItems(emptyCart);\n    setCartCount(0);\n    return emptyCart;\n  };\n\n  // Calculate cart total\n  const calculateTotal = () => {\n    return cartItems.reduce((total, item) => {\n      return total + item.price * (item.quantity || 1);\n    }, 0);\n  };\n\n  // Context value\n  const value = {\n    cartItems,\n    cartCount,\n    addItem,\n    removeItem,\n    updateItemQuantity,\n    clearCart,\n    calculateTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for using cart context\n_s(CartProvider, \"vddKaSgtRSajCkfRgb0SN40S0Pk=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default CartContext;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","addToCart","addToCartUtil","removeFromCart","removeFromCartUtil","updateCartItemQuantity","updateCartItemQuantityUtil","clearCart","clearCartUtil","updateCartCount","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","cartCount","setCartCount","loadCart","storedCart","JSON","parse","localStorage","getItem","totalItems","reduce","sum","item","quantity","window","addEventListener","removeEventListener","addItem","product","updatedCart","removeItem","productId","updateItemQuantity","emptyCart","calculateTotal","total","price","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/VRUSHANK/Desktop/Ecom Website/client/src/contexts/CartContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { \r\n  addToCart as addToCartUtil,\r\n  removeFromCart as removeFromCartUtil, \r\n  updateCartItemQuantity as updateCartItemQuantityUtil,\r\n  clearCart as clearCartUtil,\r\n  updateCartCount\r\n} from '../utils/cartUtils';\r\n\r\n// Create cart context\r\nconst CartContext = createContext(null);\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [cartCount, setCartCount] = useState(0);\r\n  \r\n  // Initialize cart from localStorage\r\n  useEffect(() => {\r\n    const loadCart = () => {\r\n      const storedCart = JSON.parse(localStorage.getItem('cart')) || [];\r\n      setCartItems(storedCart);\r\n      \r\n      // Update cart count\r\n      const totalItems = storedCart.reduce((sum, item) => sum + (item.quantity || 1), 0);\r\n      setCartCount(totalItems);\r\n    };\r\n    \r\n    loadCart();\r\n    \r\n    // Listen for storage events (from other tabs/windows)\r\n    window.addEventListener('storage', loadCart);\r\n    \r\n    // Listen for cart updates from within the app\r\n    window.addEventListener('cartUpdated', loadCart);\r\n    \r\n    return () => {\r\n      window.removeEventListener('storage', loadCart);\r\n      window.removeEventListener('cartUpdated', loadCart);\r\n    };\r\n  }, []);\r\n  \r\n  // Add item to cart\r\n  const addItem = (product) => {\r\n    const updatedCart = addToCartUtil(product);\r\n    setCartItems(updatedCart);\r\n    setCartCount(updatedCart.reduce((sum, item) => sum + (item.quantity || 1), 0));\r\n    return updatedCart;\r\n  };\r\n  \r\n  // Remove item from cart\r\n  const removeItem = (productId) => {\r\n    const updatedCart = removeFromCartUtil(productId);\r\n    setCartItems(updatedCart);\r\n    setCartCount(updatedCart.reduce((sum, item) => sum + (item.quantity || 1), 0));\r\n    return updatedCart;\r\n  };\r\n  \r\n  // Update item quantity\r\n  const updateItemQuantity = (productId, quantity) => {\r\n    const updatedCart = updateCartItemQuantityUtil(productId, quantity);\r\n    setCartItems(updatedCart);\r\n    setCartCount(updatedCart.reduce((sum, item) => sum + (item.quantity || 1), 0));\r\n    return updatedCart;\r\n  };\r\n  \r\n  // Clear cart\r\n  const clearCart = () => {\r\n    const emptyCart = clearCartUtil();\r\n    setCartItems(emptyCart);\r\n    setCartCount(0);\r\n    return emptyCart;\r\n  };\r\n  \r\n  // Calculate cart total\r\n  const calculateTotal = () => {\r\n    return cartItems.reduce((total, item) => {\r\n      return total + (item.price * (item.quantity || 1));\r\n    }, 0);\r\n  };\r\n  \r\n  // Context value\r\n  const value = {\r\n    cartItems,\r\n    cartCount,\r\n    addItem,\r\n    removeItem,\r\n    updateItemQuantity,\r\n    clearCart,\r\n    calculateTotal\r\n  };\r\n  \r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for using cart context\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default CartContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}