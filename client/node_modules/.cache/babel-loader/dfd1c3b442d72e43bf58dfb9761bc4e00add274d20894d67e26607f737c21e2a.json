{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VRUSHANK\\\\Desktop\\\\Ecom Website\\\\client\\\\src\\\\contexts\\\\ProductContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport { transformProducts } from '../utils/productTransformer';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/createContext();\n\n// API URL (would typically come from env variables)\nconst API_BASE_URL = 'https://api.escuelajs.co/api/v1/products';\nconst PRODUCTS_PER_PAGE = 12;\n\n// Simple API service functions\nconst fetchProductsFromAPI = async (offset = 0, limit = PRODUCTS_PER_PAGE) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}?offset=${offset}&limit=${limit}`);\n    if (!response.ok) {\n      throw new Error(`API Error: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    throw error;\n  }\n};\nconst searchProductsFromAPI = async query => {\n  try {\n    const response = await fetch(`${API_BASE_URL}?title=${encodeURIComponent(query)}`);\n    if (!response.ok) {\n      throw new Error(`API Error: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error searching products:', error);\n    throw error;\n  }\n};\n\n// Provider component\nexport const ProductProvider = ({\n  children\n}) => {\n  _s();\n  // State\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [pagination, setPagination] = useState({\n    currentPage: 0,\n    hasMore: true,\n    totalProducts: 0\n  });\n\n  // Filters state\n  const [filters, setFilters] = useState({\n    genre: [],\n    decade: [],\n    condition: [],\n    productType: [],\n    priceRange: [0, 500]\n  });\n\n  // Initialize with products on mount\n  useEffect(() => {\n    fetchProducts();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Fetch products with pagination\n  const fetchProducts = useCallback(async (resetResults = true) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const offset = resetResults ? 0 : pagination.currentPage * PRODUCTS_PER_PAGE;\n      const rawProducts = await fetchProductsFromAPI(offset, PRODUCTS_PER_PAGE);\n\n      // Transform products to vinyl-themed products\n      const transformedProducts = transformProducts(rawProducts);\n\n      // Update state based on whether we're resetting or appending\n      if (resetResults) {\n        setProducts(transformedProducts);\n        setFilteredProducts(transformedProducts);\n        setPagination({\n          currentPage: 0,\n          hasMore: transformedProducts.length === PRODUCTS_PER_PAGE,\n          totalProducts: transformedProducts.length\n        });\n      } else {\n        setProducts(prevProducts => [...prevProducts, ...transformedProducts]);\n        setFilteredProducts(prevProducts => [...prevProducts, ...transformedProducts]);\n        setPagination(prev => ({\n          currentPage: prev.currentPage + 1,\n          hasMore: transformedProducts.length === PRODUCTS_PER_PAGE,\n          totalProducts: prev.totalProducts + transformedProducts.length\n        }));\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [pagination]);\n\n  // Load more products (infinite scroll functionality)\n  const loadMore = useCallback(async () => {\n    if (!loading && pagination.hasMore) {\n      await fetchProducts(false);\n    }\n  }, [loading, pagination.hasMore, fetchProducts]);\n\n  // Search products\n  const searchProducts = useCallback(async query => {\n    if (!query.trim()) {\n      fetchProducts();\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      const rawProducts = await searchProductsFromAPI(query);\n\n      // Transform products\n      const transformedProducts = transformProducts(rawProducts);\n      setProducts(transformedProducts);\n      setFilteredProducts(transformedProducts);\n      setPagination({\n        currentPage: 0,\n        hasMore: false,\n        // Search results don't support pagination in this API\n        totalProducts: transformedProducts.length\n      });\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Apply filters to products\n  const filterProducts = useCallback(() => {\n    let result = [...products];\n\n    // Filter by genre\n    if (filters.genre.length > 0) {\n      result = result.filter(product => filters.genre.includes(product.genre));\n    }\n\n    // Filter by decade\n    if (filters.decade.length > 0) {\n      result = result.filter(product => filters.decade.includes(product.decade));\n    }\n\n    // Filter by condition\n    if (filters.condition.length > 0) {\n      result = result.filter(product => filters.condition.includes(product.condition));\n    }\n\n    // Filter by product type\n    if (filters.productType.length > 0) {\n      result = result.filter(product => filters.productType.includes(product.productType));\n    }\n\n    // Filter by price range\n    result = result.filter(product => {\n      const price = parseFloat(product.price);\n      return price >= filters.priceRange[0] && price <= filters.priceRange[1];\n    });\n    setFilteredProducts(result);\n  }, [products, filters]);\n\n  // Update filters\n  const updateFilters = useCallback(newFilters => {\n    setFilters(prev => ({\n      ...prev,\n      ...newFilters\n    }));\n  }, []);\n\n  // Effect to apply filters when filters change\n  useEffect(() => {\n    filterProducts();\n  }, [filters, filterProducts]);\n\n  // Get product by ID\n  const getProductById = useCallback(async id => {\n    try {\n      setLoading(true);\n\n      // First check if the product is already in our state\n      const existingProduct = products.find(p => p.id === parseInt(id));\n      if (existingProduct) {\n        return existingProduct;\n      }\n\n      // If not, fetch it from the API\n      const response = await fetch(`${API_BASE_URL}/${id}`);\n      if (!response.ok) {\n        throw new Error(`API Error: ${response.status}`);\n      }\n      const rawProduct = await response.json();\n\n      // Transform the product\n      const transformedProduct = transformProducts([rawProduct])[0];\n      return transformedProduct;\n    } catch (err) {\n      setError(err.message);\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }, [products]);\n\n  // Context value\n  const value = {\n    products: filteredProducts,\n    allProducts: products,\n    loading,\n    error,\n    pagination,\n    fetchProducts,\n    loadMore,\n    searchProducts,\n    updateFilters,\n    filters,\n    getProductById\n  };\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for using this context\n_s(ProductProvider, \"3B4HAPMIDxuiHWhVYuzipbdUvS4=\");\n_c = ProductProvider;\nexport const useProducts = () => {\n  _s2();\n  const context = useContext(ProductContext);\n  if (!context) {\n    throw new Error('useProducts must be used within a ProductProvider');\n  }\n  return context;\n};\n_s2(useProducts, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default ProductContext;\nvar _c;\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useCallback","transformProducts","jsxDEV","_jsxDEV","ProductContext","API_BASE_URL","PRODUCTS_PER_PAGE","fetchProductsFromAPI","offset","limit","response","fetch","ok","Error","status","json","error","console","searchProductsFromAPI","query","encodeURIComponent","ProductProvider","children","_s","products","setProducts","filteredProducts","setFilteredProducts","loading","setLoading","setError","pagination","setPagination","currentPage","hasMore","totalProducts","filters","setFilters","genre","decade","condition","productType","priceRange","fetchProducts","resetResults","rawProducts","transformedProducts","length","prevProducts","prev","err","message","loadMore","searchProducts","trim","filterProducts","result","filter","product","includes","price","parseFloat","updateFilters","newFilters","getProductById","id","existingProduct","find","p","parseInt","rawProduct","transformedProduct","value","allProducts","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useProducts","_s2","context","$RefreshReg$"],"sources":["C:/Users/VRUSHANK/Desktop/Ecom Website/client/src/contexts/ProductContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\r\nimport { transformProducts } from '../utils/productTransformer';\r\n\r\n// Create context\r\nconst ProductContext = createContext();\r\n\r\n// API URL (would typically come from env variables)\r\nconst API_BASE_URL = 'https://api.escuelajs.co/api/v1/products';\r\nconst PRODUCTS_PER_PAGE = 12;\r\n\r\n// Simple API service functions\r\nconst fetchProductsFromAPI = async (offset = 0, limit = PRODUCTS_PER_PAGE) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}?offset=${offset}&limit=${limit}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`API Error: ${response.status}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching products:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst searchProductsFromAPI = async (query) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}?title=${encodeURIComponent(query)}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`API Error: ${response.status}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error searching products:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Provider component\r\nexport const ProductProvider = ({ children }) => {\r\n  // State\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [pagination, setPagination] = useState({\r\n    currentPage: 0,\r\n    hasMore: true,\r\n    totalProducts: 0\r\n  });\r\n  \r\n  // Filters state\r\n  const [filters, setFilters] = useState({\r\n    genre: [],\r\n    decade: [],\r\n    condition: [],\r\n    productType: [],\r\n    priceRange: [0, 500]\r\n  });\r\n  \r\n  // Initialize with products on mount\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  \r\n  // Fetch products with pagination\r\n  const fetchProducts = useCallback(async (resetResults = true) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const offset = resetResults ? 0 : pagination.currentPage * PRODUCTS_PER_PAGE;\r\n      const rawProducts = await fetchProductsFromAPI(offset, PRODUCTS_PER_PAGE);\r\n      \r\n      // Transform products to vinyl-themed products\r\n      const transformedProducts = transformProducts(rawProducts);\r\n      \r\n      // Update state based on whether we're resetting or appending\r\n      if (resetResults) {\r\n        setProducts(transformedProducts);\r\n        setFilteredProducts(transformedProducts);\r\n        setPagination({\r\n          currentPage: 0,\r\n          hasMore: transformedProducts.length === PRODUCTS_PER_PAGE,\r\n          totalProducts: transformedProducts.length\r\n        });\r\n      } else {\r\n        setProducts(prevProducts => [...prevProducts, ...transformedProducts]);\r\n        setFilteredProducts(prevProducts => [...prevProducts, ...transformedProducts]);\r\n        setPagination(prev => ({\r\n          currentPage: prev.currentPage + 1,\r\n          hasMore: transformedProducts.length === PRODUCTS_PER_PAGE,\r\n          totalProducts: prev.totalProducts + transformedProducts.length\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [pagination]);\r\n  \r\n  // Load more products (infinite scroll functionality)\r\n  const loadMore = useCallback(async () => {\r\n    if (!loading && pagination.hasMore) {\r\n      await fetchProducts(false);\r\n    }\r\n  }, [loading, pagination.hasMore, fetchProducts]);\r\n  \r\n  // Search products\r\n  const searchProducts = useCallback(async (query) => {\r\n    if (!query.trim()) {\r\n      fetchProducts();\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const rawProducts = await searchProductsFromAPI(query);\r\n      \r\n      // Transform products\r\n      const transformedProducts = transformProducts(rawProducts);\r\n      \r\n      setProducts(transformedProducts);\r\n      setFilteredProducts(transformedProducts);\r\n      setPagination({\r\n        currentPage: 0,\r\n        hasMore: false, // Search results don't support pagination in this API\r\n        totalProducts: transformedProducts.length\r\n      });\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  \r\n  // Apply filters to products\r\n  const filterProducts = useCallback(() => {\r\n    let result = [...products];\r\n    \r\n    // Filter by genre\r\n    if (filters.genre.length > 0) {\r\n      result = result.filter(product => \r\n        filters.genre.includes(product.genre)\r\n      );\r\n    }\r\n    \r\n    // Filter by decade\r\n    if (filters.decade.length > 0) {\r\n      result = result.filter(product => \r\n        filters.decade.includes(product.decade)\r\n      );\r\n    }\r\n    \r\n    // Filter by condition\r\n    if (filters.condition.length > 0) {\r\n      result = result.filter(product => \r\n        filters.condition.includes(product.condition)\r\n      );\r\n    }\r\n    \r\n    // Filter by product type\r\n    if (filters.productType.length > 0) {\r\n      result = result.filter(product => \r\n        filters.productType.includes(product.productType)\r\n      );\r\n    }\r\n    \r\n    // Filter by price range\r\n    result = result.filter(product => {\r\n      const price = parseFloat(product.price);\r\n      return price >= filters.priceRange[0] && price <= filters.priceRange[1];\r\n    });\r\n    \r\n    setFilteredProducts(result);\r\n  }, [products, filters]);\r\n  \r\n  // Update filters\r\n  const updateFilters = useCallback((newFilters) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      ...newFilters\r\n    }));\r\n  }, []);\r\n  \r\n  // Effect to apply filters when filters change\r\n  useEffect(() => {\r\n    filterProducts();\r\n  }, [filters, filterProducts]);\r\n  \r\n  // Get product by ID\r\n  const getProductById = useCallback(async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // First check if the product is already in our state\r\n      const existingProduct = products.find(p => p.id === parseInt(id));\r\n      \r\n      if (existingProduct) {\r\n        return existingProduct;\r\n      }\r\n      \r\n      // If not, fetch it from the API\r\n      const response = await fetch(`${API_BASE_URL}/${id}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`API Error: ${response.status}`);\r\n      }\r\n      \r\n      const rawProduct = await response.json();\r\n      \r\n      // Transform the product\r\n      const transformedProduct = transformProducts([rawProduct])[0];\r\n      \r\n      return transformedProduct;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [products]);\r\n  \r\n  // Context value\r\n  const value = {\r\n    products: filteredProducts,\r\n    allProducts: products,\r\n    loading,\r\n    error,\r\n    pagination,\r\n    fetchProducts,\r\n    loadMore,\r\n    searchProducts,\r\n    updateFilters,\r\n    filters,\r\n    getProductById\r\n  };\r\n  \r\n  return (\r\n    <ProductContext.Provider value={value}>\r\n      {children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for using this context\r\nexport const useProducts = () => {\r\n  const context = useContext(ProductContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useProducts must be used within a ProductProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default ProductContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}