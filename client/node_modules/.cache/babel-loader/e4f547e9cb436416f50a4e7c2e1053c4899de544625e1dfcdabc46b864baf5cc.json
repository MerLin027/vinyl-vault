{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{addToCart as addToCartUtil,removeFromCart as removeFromCartUtil,updateCartItemQuantity as updateCartItemQuantityUtil,clearCart as clearCartUtil}from'../utils/cartUtils';// Create cart context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext(null);export const CartProvider=_ref=>{let{children}=_ref;const[cartItems,setCartItems]=useState([]);const[cartCount,setCartCount]=useState(0);// Initialize cart from localStorage\nuseEffect(()=>{const loadCart=()=>{const storedCart=JSON.parse(localStorage.getItem('cart'))||[];setCartItems(storedCart);// Update cart count\nconst totalItems=storedCart.reduce((sum,item)=>sum+(item.quantity||1),0);setCartCount(totalItems);};loadCart();// Listen for storage events (from other tabs/windows)\nwindow.addEventListener('storage',loadCart);// Listen for cart updates from within the app\nwindow.addEventListener('cartUpdated',loadCart);return()=>{window.removeEventListener('storage',loadCart);window.removeEventListener('cartUpdated',loadCart);};},[]);// Add item to cart\nconst addItem=product=>{const updatedCart=addToCartUtil(product);setCartItems(updatedCart);setCartCount(updatedCart.reduce((sum,item)=>sum+(item.quantity||1),0));return updatedCart;};// Remove item from cart\nconst removeItem=productId=>{const updatedCart=removeFromCartUtil(productId);setCartItems(updatedCart);setCartCount(updatedCart.reduce((sum,item)=>sum+(item.quantity||1),0));return updatedCart;};// Update item quantity\nconst updateItemQuantity=(productId,quantity)=>{const updatedCart=updateCartItemQuantityUtil(productId,quantity);setCartItems(updatedCart);setCartCount(updatedCart.reduce((sum,item)=>sum+(item.quantity||1),0));return updatedCart;};// Clear cart\nconst clearCart=()=>{const emptyCart=clearCartUtil();setCartItems(emptyCart);setCartCount(0);return emptyCart;};// Calculate cart total\nconst calculateTotal=()=>{return cartItems.reduce((total,item)=>{return total+item.price*(item.quantity||1);},0);};// Context value\nconst value={cartItems,cartCount,addItem,removeItem,updateItemQuantity,clearCart,calculateTotal};return/*#__PURE__*/_jsx(CartContext.Provider,{value:value,children:children});};// Custom hook for using cart context\nexport const useCart=()=>{const context=useContext(CartContext);if(!context){throw new Error('useCart must be used within a CartProvider');}return context;};export default CartContext;","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","addToCart","addToCartUtil","removeFromCart","removeFromCartUtil","updateCartItemQuantity","updateCartItemQuantityUtil","clearCart","clearCartUtil","jsx","_jsx","CartContext","CartProvider","_ref","children","cartItems","setCartItems","cartCount","setCartCount","loadCart","storedCart","JSON","parse","localStorage","getItem","totalItems","reduce","sum","item","quantity","window","addEventListener","removeEventListener","addItem","product","updatedCart","removeItem","productId","updateItemQuantity","emptyCart","calculateTotal","total","price","value","Provider","useCart","context","Error"],"sources":["C:/Users/VRUSHANK/Desktop/Ecom Website/client/src/contexts/CartContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { \r\n  addToCart as addToCartUtil,\r\n  removeFromCart as removeFromCartUtil, \r\n  updateCartItemQuantity as updateCartItemQuantityUtil,\r\n  clearCart as clearCartUtil\r\n} from '../utils/cartUtils';\r\n\r\n// Create cart context\r\nconst CartContext = createContext(null);\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [cartCount, setCartCount] = useState(0);\r\n  \r\n  // Initialize cart from localStorage\r\n  useEffect(() => {\r\n    const loadCart = () => {\r\n      const storedCart = JSON.parse(localStorage.getItem('cart')) || [];\r\n      setCartItems(storedCart);\r\n      \r\n      // Update cart count\r\n      const totalItems = storedCart.reduce((sum, item) => sum + (item.quantity || 1), 0);\r\n      setCartCount(totalItems);\r\n    };\r\n    \r\n    loadCart();\r\n    \r\n    // Listen for storage events (from other tabs/windows)\r\n    window.addEventListener('storage', loadCart);\r\n    \r\n    // Listen for cart updates from within the app\r\n    window.addEventListener('cartUpdated', loadCart);\r\n    \r\n    return () => {\r\n      window.removeEventListener('storage', loadCart);\r\n      window.removeEventListener('cartUpdated', loadCart);\r\n    };\r\n  }, []);\r\n  \r\n  // Add item to cart\r\n  const addItem = (product) => {\r\n    const updatedCart = addToCartUtil(product);\r\n    setCartItems(updatedCart);\r\n    setCartCount(updatedCart.reduce((sum, item) => sum + (item.quantity || 1), 0));\r\n    return updatedCart;\r\n  };\r\n  \r\n  // Remove item from cart\r\n  const removeItem = (productId) => {\r\n    const updatedCart = removeFromCartUtil(productId);\r\n    setCartItems(updatedCart);\r\n    setCartCount(updatedCart.reduce((sum, item) => sum + (item.quantity || 1), 0));\r\n    return updatedCart;\r\n  };\r\n  \r\n  // Update item quantity\r\n  const updateItemQuantity = (productId, quantity) => {\r\n    const updatedCart = updateCartItemQuantityUtil(productId, quantity);\r\n    setCartItems(updatedCart);\r\n    setCartCount(updatedCart.reduce((sum, item) => sum + (item.quantity || 1), 0));\r\n    return updatedCart;\r\n  };\r\n  \r\n  // Clear cart\r\n  const clearCart = () => {\r\n    const emptyCart = clearCartUtil();\r\n    setCartItems(emptyCart);\r\n    setCartCount(0);\r\n    return emptyCart;\r\n  };\r\n  \r\n  // Calculate cart total\r\n  const calculateTotal = () => {\r\n    return cartItems.reduce((total, item) => {\r\n      return total + (item.price * (item.quantity || 1));\r\n    }, 0);\r\n  };\r\n  \r\n  // Context value\r\n  const value = {\r\n    cartItems,\r\n    cartCount,\r\n    addItem,\r\n    removeItem,\r\n    updateItemQuantity,\r\n    clearCart,\r\n    calculateTotal\r\n  };\r\n  \r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for using cart context\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default CartContext; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAC7E,OACEC,SAAS,GAAI,CAAAC,aAAa,CAC1BC,cAAc,GAAI,CAAAC,kBAAkB,CACpCC,sBAAsB,GAAI,CAAAC,0BAA0B,CACpDC,SAAS,GAAI,CAAAC,aAAa,KACrB,oBAAoB,CAE3B;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,WAAW,cAAGd,aAAa,CAAC,IAAI,CAAC,CAEvC,MAAO,MAAM,CAAAe,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACmB,SAAS,CAAEC,YAAY,CAAC,CAAGpB,QAAQ,CAAC,CAAC,CAAC,CAE7C;AACAE,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmB,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAAAC,UAAU,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAI,EAAE,CACjER,YAAY,CAACI,UAAU,CAAC,CAExB;AACA,KAAM,CAAAK,UAAU,CAAGL,UAAU,CAACM,MAAM,CAAC,CAACC,GAAG,CAAEC,IAAI,GAAKD,GAAG,EAAIC,IAAI,CAACC,QAAQ,EAAI,CAAC,CAAC,CAAE,CAAC,CAAC,CAClFX,YAAY,CAACO,UAAU,CAAC,CAC1B,CAAC,CAEDN,QAAQ,CAAC,CAAC,CAEV;AACAW,MAAM,CAACC,gBAAgB,CAAC,SAAS,CAAEZ,QAAQ,CAAC,CAE5C;AACAW,MAAM,CAACC,gBAAgB,CAAC,aAAa,CAAEZ,QAAQ,CAAC,CAEhD,MAAO,IAAM,CACXW,MAAM,CAACE,mBAAmB,CAAC,SAAS,CAAEb,QAAQ,CAAC,CAC/CW,MAAM,CAACE,mBAAmB,CAAC,aAAa,CAAEb,QAAQ,CAAC,CACrD,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAc,OAAO,CAAIC,OAAO,EAAK,CAC3B,KAAM,CAAAC,WAAW,CAAGjC,aAAa,CAACgC,OAAO,CAAC,CAC1ClB,YAAY,CAACmB,WAAW,CAAC,CACzBjB,YAAY,CAACiB,WAAW,CAACT,MAAM,CAAC,CAACC,GAAG,CAAEC,IAAI,GAAKD,GAAG,EAAIC,IAAI,CAACC,QAAQ,EAAI,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAC9E,MAAO,CAAAM,WAAW,CACpB,CAAC,CAED;AACA,KAAM,CAAAC,UAAU,CAAIC,SAAS,EAAK,CAChC,KAAM,CAAAF,WAAW,CAAG/B,kBAAkB,CAACiC,SAAS,CAAC,CACjDrB,YAAY,CAACmB,WAAW,CAAC,CACzBjB,YAAY,CAACiB,WAAW,CAACT,MAAM,CAAC,CAACC,GAAG,CAAEC,IAAI,GAAKD,GAAG,EAAIC,IAAI,CAACC,QAAQ,EAAI,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAC9E,MAAO,CAAAM,WAAW,CACpB,CAAC,CAED;AACA,KAAM,CAAAG,kBAAkB,CAAGA,CAACD,SAAS,CAAER,QAAQ,GAAK,CAClD,KAAM,CAAAM,WAAW,CAAG7B,0BAA0B,CAAC+B,SAAS,CAAER,QAAQ,CAAC,CACnEb,YAAY,CAACmB,WAAW,CAAC,CACzBjB,YAAY,CAACiB,WAAW,CAACT,MAAM,CAAC,CAACC,GAAG,CAAEC,IAAI,GAAKD,GAAG,EAAIC,IAAI,CAACC,QAAQ,EAAI,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAC9E,MAAO,CAAAM,WAAW,CACpB,CAAC,CAED;AACA,KAAM,CAAA5B,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAAgC,SAAS,CAAG/B,aAAa,CAAC,CAAC,CACjCQ,YAAY,CAACuB,SAAS,CAAC,CACvBrB,YAAY,CAAC,CAAC,CAAC,CACf,MAAO,CAAAqB,SAAS,CAClB,CAAC,CAED;AACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,MAAO,CAAAzB,SAAS,CAACW,MAAM,CAAC,CAACe,KAAK,CAAEb,IAAI,GAAK,CACvC,MAAO,CAAAa,KAAK,CAAIb,IAAI,CAACc,KAAK,EAAId,IAAI,CAACC,QAAQ,EAAI,CAAC,CAAE,CACpD,CAAC,CAAE,CAAC,CAAC,CACP,CAAC,CAED;AACA,KAAM,CAAAc,KAAK,CAAG,CACZ5B,SAAS,CACTE,SAAS,CACTgB,OAAO,CACPG,UAAU,CACVE,kBAAkB,CAClB/B,SAAS,CACTiC,cACF,CAAC,CAED,mBACE9B,IAAA,CAACC,WAAW,CAACiC,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAA7B,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED;AACA,MAAO,MAAM,CAAA+B,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAG/C,UAAU,CAACY,WAAW,CAAC,CACvC,GAAI,CAACmC,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,4CAA4C,CAAC,CAC/D,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,cAAe,CAAAnC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}