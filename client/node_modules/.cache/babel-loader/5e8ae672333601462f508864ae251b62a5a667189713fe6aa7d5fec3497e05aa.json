{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import axios from'axios';// Create Auth Context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);// Auth Provider Component\nexport const AuthProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Check if user is already authenticated on mount\nuseEffect(()=>{checkAuth();},[]);// Login method\nconst login=async(email,password)=>{try{setError(null);const response=await axios.post('/api/auth/login',{email,password});if(response.data.success){setCurrentUser(response.data.user);return{success:true};}else{setError(response.data.error||'Login failed');return{success:false,message:response.data.error};}}catch(err){var _err$response,_err$response$data;const errorMessage=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||'Login failed';setError(errorMessage);return{success:false,message:errorMessage};}};// Signup method\nconst signup=async(email,username,password)=>{try{setError(null);await axios.post('/api/auth/signup',{email,username,password});return{success:true};}catch(err){var _err$response2,_err$response2$data;const errorMessage=((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.error)||'Signup failed';setError(errorMessage);return{success:false,message:errorMessage};}};// Logout method\nconst logout=async()=>{try{await axios.post('/api/auth/logout');setCurrentUser(null);return{success:true};}catch(err){var _err$response3,_err$response3$data;const errorMessage=((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.error)||'Logout failed';setError(errorMessage);return{success:false,message:errorMessage};}};// Check authentication status\nconst checkAuth=async()=>{try{setLoading(true);const response=await axios.get('/api/auth/status');if(response.data.authenticated){setCurrentUser(response.data.user);}else{setCurrentUser(null);}}catch(err){setError('Authentication check failed');setCurrentUser(null);}finally{setLoading(false);}};// Context value\nconst value={currentUser,loading,error,login,signup,logout,checkAuth};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};// Custom hook for using auth context\nexport const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsx","_jsx","AuthContext","AuthProvider","_ref","children","currentUser","setCurrentUser","loading","setLoading","error","setError","checkAuth","login","email","password","response","post","data","success","user","message","err","_err$response","_err$response$data","errorMessage","signup","username","_err$response2","_err$response2$data","logout","_err$response3","_err$response3$data","get","authenticated","value","Provider","useAuth","context","Error"],"sources":["C:/Users/VRUSHANK/Desktop/Ecom Website/client/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Create Auth Context\r\nconst AuthContext = createContext(null);\r\n\r\n// Auth Provider Component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check if user is already authenticated on mount\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Login method\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError(null);\r\n      const response = await axios.post('/api/auth/login', { email, password });\r\n      \r\n      if (response.data.success) {\r\n        setCurrentUser(response.data.user);\r\n        return { success: true };\r\n      } else {\r\n        setError(response.data.error || 'Login failed');\r\n        return { success: false, message: response.data.error };\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.error || 'Login failed';\r\n      setError(errorMessage);\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Signup method\r\n  const signup = async (email, username, password) => {\r\n    try {\r\n      setError(null);\r\n      await axios.post('/api/auth/signup', { email, username, password });\r\n      return { success: true };\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.error || 'Signup failed';\r\n      setError(errorMessage);\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Logout method\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post('/api/auth/logout');\r\n      setCurrentUser(null);\r\n      return { success: true };\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.error || 'Logout failed';\r\n      setError(errorMessage);\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Check authentication status\r\n  const checkAuth = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get('/api/auth/status');\r\n      \r\n      if (response.data.authenticated) {\r\n        setCurrentUser(response.data.user);\r\n      } else {\r\n        setCurrentUser(null);\r\n      }\r\n    } catch (err) {\r\n      setError('Authentication check failed');\r\n      setCurrentUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    currentUser,\r\n    loading,\r\n    error,\r\n    login,\r\n    signup,\r\n    logout,\r\n    checkAuth\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for using auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}